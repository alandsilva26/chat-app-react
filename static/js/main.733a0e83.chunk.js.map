{"version":3,"sources":["Login/styles.js","Login/login.js","Signup/styles.js","Signup/signup.js","ChatList/styles.js","ChatList/chatlist.js","Chatview/styles.js","Chatview/Chatview.js","Chattextbox/styles.js","Chattextbox/Chattextbox.js","NewChat/styles.js","NewChat/NewChat.js","Dashboard/styles.js","Dashboard/dashboard.js","Home/home.js","index.js"],"names":["styles","theme","main","width","display","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","componentDidMount","userTyping","type","e","setState","email","target","value","password","submitLogin","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","console","log","loginError","message","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","vairant","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupComponent","passwordConfirmation","formIsValid","submitSignup","createUserWithEmailAndPassword","authRes","userObject","user","firestore","collection","doc","set","authError","signupError","root","backgroundColor","palette","background","height","position","left","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","ChatListComponent","userIsSender","chat","messages","length","sender","userEmail","newChat","newChatButtonFn","selectChat","index","selectChatFn","chats","newChatsBtn","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","split","ListItemText","primary","secondary","Fragment","substring","receiverHasRead","ListItemIcon","Divider","content","overflow","boxSizing","overflowY","userSent","float","clear","paddingBottom","wordWrap","friendSent","chatHeader","fontSize","paddingTop","ChatViewComponent","componentDidUpdate","container","document","getElementById","scrollTo","scrollHeight","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","second","undefined","_usr","_msg","timestamp","style","justifyContent","sendBtn","chatTextBoxContainer","bottom","chatTextBox","ChatTextBoxComponent","keyCode","submitMessage","chatText","messageValid","txt","replace","userClickedInput","messageReadFn","submitMessageFn","TextField","placeholder","onKeyUp","onFocus","input","NewChatComponent","inputType","username","submitNewChat","a","userExists","chatExists","goToChat","createChat","buildDocKey","currentUser","sort","join","newChatSubmitFn","sendTo","goToChatFn","docKey","get","exists","usersSnapshot","docs","_doc","data","includes","serverError","signOutBtn","DashboardComponent","msg","usersInChat","find","every","newChatFormVisible","indexOf","newChatSubmit","selectedChat","update","FieldValue","arrayUnion","toISOString","friend","chatIndex","messageRead","newChatButtonClicked","clickedChatWhereNotSender","onAuthStateChanged","where","onSnapshot","res","signOut","NewChat","Home","config","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","basename","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.733a0e83.chunk.js","sourcesContent":["const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing() * 3,\n    marginRight: theme.spacing() * 3,\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing() * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing() * 2}px ${theme.spacing() * 3}px ${\n      theme.spacing() * 3\n    }px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(),\n  },\n  submit: {\n    marginTop: theme.spacing() * 3,\n  },\n  noAccountHeader: {\n    width: \"100%\",\n  },\n  signUpLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport styles from \"./styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      loginError: \"\",\n    };\n  }\n\n  componentDidMount = () => {};\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => this.submitLogin(e)}>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"login-email-input\">\n                Enter your email\n              </InputLabel>\n              <Input\n                autoComplete=\"email\"\n                autoFocus\n                id=\"login-email-input\"\n                onChange={(e) => this.userTyping(\"email\", e)}\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"login-password-input\">\n                Enter your password\n              </InputLabel>\n              <Input\n                id=\"login-password-input\"\n                type=\"password\"\n                onChange={(e) => this.userTyping(\"password\", e)}\n              ></Input>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Login\n            </Button>\n          </form>\n          {this.state.loginError ? (\n            <Typography\n              component=\"h5\"\n              vairant=\"h6\"\n              className={classes.errorText}\n            >\n              {this.state.loginError}\n            </Typography>\n          ) : null}\n          <Typography\n            component=\"h5\"\n            variant=\"h6\"\n            className={classes.noAccountHeader}\n          >\n            Don't Have an Account?\n          </Typography>\n          <Link className={classes.signUpLink} to=\"/signup\">\n            Sign up\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({\n          email: e.target.value,\n        });\n        break;\n      case \"password\":\n        this.setState({\n          password: e.target.value,\n        });\n        break;\n    }\n  };\n\n  submitLogin = (e) => {\n    e.preventDefault();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(\n        () => {\n          this.props.history.push(\"/dashboard\");\n        },\n        (err) => {\n          console.log(err);\n          this.setState({\n            loginError: err.message,\n          });\n        }\n      );\n  };\n}\n\nexport default withStyles(styles)(LoginComponent);\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing() * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing() * 2}px ${theme.spacing() * 3}px ${\n      theme.spacing() * 3\n    }px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(),\n  },\n  submit: {\n    marginTop: theme.spacing() * 3,\n  },\n  hasAccountHeader: {\n    width: \"100%\",\n  },\n  logInLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./styles\";\n\nclass SignupComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: null,\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up!\n          </Typography>\n          <Typography component=\"h5\" variant=\"s6\" className={classes.errorText}>\n            Please do not use passwords you have used elsewhere.\n          </Typography>\n          <Typography component=\"h5\" variant=\"s6\">\n            Sign in is via firebase auth and no passwords are saved. Use dummy\n            email if needed.\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => this.submitSignup(e)}>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-email-input\">\n                Enter your email\n              </InputLabel>\n              <Input\n                autoComplete=\"email\"\n                autoFocus\n                type=\"email\"\n                id=\"signup-email-input\"\n                onChange={(e) => this.userTyping(\"email\", e)}\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-password-input\">\n                Create a Password\n              </InputLabel>\n              <Input\n                type=\"password\"\n                id=\"signup-password-input\"\n                onChange={(e) => this.userTyping(\"password\", e)}\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-password-confirmation-input\">\n                Confirm Your Password\n              </InputLabel>\n              <Input\n                type=\"password\"\n                id=\"signup-password-confirmation-input\"\n                onChange={(e) => this.userTyping(\"passwordConfirmation\", e)}\n              ></Input>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              className={classes.submit}\n            >\n              Submit\n            </Button>\n          </form>\n          {this.state.signupError ? (\n            <Typography\n              component=\"h5\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              {this.state.signupError}\n            </Typography>\n          ) : null}\n          <Typography\n            component=\"h5\"\n            variant=\"h6\"\n            className={classes.hasAccountHeader}\n          >\n            Already Have An Account?\n          </Typography>\n          <Link className={classes.logInLink} to=\"/login\">\n            Log In!\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      case \"passwordConfirmation\":\n        this.setState({ passwordConfirmation: e.target.value });\n        break;\n    }\n  };\n\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n  submitSignup = (e) => {\n    e.preventDefault();\n    if (!this.formIsValid()) {\n      this.setState({ signupError: \"Passwords do not match\" });\n      return;\n    }\n    const firebase = require(\"firebase\");\n    require(\"firebase/firestore\");\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then((authRes) => {\n        const userObject = {\n          email: authRes.user.email,\n        };\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(this.state.email)\n          .set(userObject)\n          .then(\n            () => {\n              this.props.history.push(\"/dashboard\");\n            },\n            (authError) => {\n              console.log(authError);\n              this.setState({ signupError: \"Failed to add user\" });\n            }\n          );\n      });\n  };\n}\n\nexport default withStyles(styles)(SignupComponent);\n","const styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"calc(100% - 35px)\",\n    position: \"absolute\",\n    left: \"0\",\n    width: \"300px\",\n    boxShadow: \"0px 0px 2px black\",\n  },\n  listItem: {\n    cursor: \"pointer\",\n  },\n  newChatBtn: {\n    borderRadius: \"0px\",\n  },\n  unreadMessage: {\n    color: \"red !important\",\n    position: \"absolute\",\n    top: \"25%\",\n    right: \"5px\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatListComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n    if (this.props.chats.length > 0) {\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatsBtn}\n            onClick={this.newChat}\n          >\n            New Message\n          </Button>\n          <List>\n            {this.props.chats.map((_chat, _index) => {\n              return (\n                <div key={_index}>\n                  <ListItem\n                    onClick={() => this.selectChat(_index)}\n                    className={classes.listItem}\n                    selected={this.props.selectedChatIndex === _index}\n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\">\n                        {\n                          _chat.users\n                            .filter(\n                              (_user) => _user !== this.props.userEmail\n                            )[0]\n                            .split(\"\")[0]\n                        }\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={_chat.users.filter(\n                        (_user) => _user !== this.props.userEmail\n                      )}\n                      secondary={\n                        <React.Fragment>\n                          <Typography component=\"span\" color=\"textPrimary\">\n                            {_chat.messages[\n                              _chat.messages.length - 1\n                            ].message.substring(0, 30)}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    ></ListItemText>\n                    {_chat.receiverHasRead == false &&\n                    !this.userIsSender(_chat) ? (\n                      <ListItemIcon>\n                        <NotificationImportant\n                          className={classes.unreadMessage}\n                        ></NotificationImportant>\n                      </ListItemIcon>\n                    ) : null}\n                  </ListItem>\n                  <Divider></Divider>\n                </div>\n              );\n            })}\n          </List>\n        </main>\n      );\n    } else {\n      return (\n        <main className={classes.root}>\n          <Typography component=\"h5\" variant=\"s5\">\n            No chats to display\n          </Typography>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatsBtn}\n            onClick={this.newChat}\n          >\n            New Message\n          </Button>\n        </main>\n      );\n    }\n  }\n\n  userIsSender = (chat) =>\n    chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\n\n  newChat = () => {\n    this.props.newChatButtonFn();\n  };\n\n  selectChat = (index) => {\n    this.props.selectChatFn(index);\n  };\n}\n\nexport default withStyles(styles)(ChatListComponent);\n","import { red } from \"@material-ui/core/colors\";\n\nconst styles = (theme) => ({\n  content: {\n    height: \"calc(100vh - 100px)\",\n    overflow: \"auto\",\n    padding: \"25px\",\n    marginLeft: \"300px\",\n    boxSizing: \"border-box\",\n    overflowY: \"scroll\",\n    top: \"50px\",\n    width: \"calc(100% - 300px)\",\n    position: \"absolute\",\n  },\n\n  userSent: {\n    float: \"right\",\n    clear: \"both\",\n    padding: \"10px\",\n    paddingBottom: \"0px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#707BC4\",\n    color: \"white\",\n    width: \"300px\",\n    borderRadius: \"10px\",\n  },\n\n  friendSent: {\n    float: \"left\",\n    clear: \"both\",\n    padding: \"10px\",\n    paddingBottom: \"0px\",\n    boxSizing: \"border-box\",\n    wordWrap: \"break-word\",\n    marginTop: \"10px\",\n    backgroundColor: \"#707BC4\",\n    color: \"white\",\n    width: \"300px\",\n    borderRadius: \"10px\",\n  },\n\n  chatHeader: {\n    width: \"calc(100% - 301px)\",\n    height: \"50px\",\n    backgroundColor: \"#344195\",\n    position: \"fixed\",\n    marginLeft: \"301px\",\n    fontSize: \"18px\",\n    textAlign: \"center\",\n    color: \"white\",\n    paddingTop: \"10px\",\n    boxSizing: \"border-box\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass ChatViewComponent extends React.Component {\n  componentDidUpdate = () => {\n    const container = document.getElementById(\"chatview-container\");\n    if (container) {\n      container.scrollTo(0, container.scrollHeight);\n    }\n  };\n  formatDate = (dateString) => {\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\",\n    };\n    return new Date(dateString).toLocaleDateString(\"en-in\", options);\n  };\n  render() {\n    const { classes, chat, user } = this.props;\n    if (chat == undefined) {\n      return <main id=\"chatview-container\" className={classes.content}></main>;\n    } else {\n      return (\n        <div>\n          <div className={classes.chatHeader}>\n            Your conversation with{\" \"}\n            {chat.users.filter((_usr) => _usr !== user)[0]}\n          </div>\n          <main id=\"chatview-container\" className={classes.content}>\n            {chat.messages.map((_msg, _index) => {\n              console.log(this.formatDate(_msg.timestamp));\n              return (\n                <div\n                  key={_index}\n                  className={\n                    _msg.sender == user ? classes.userSent : classes.friendSent\n                  }\n                  style={\n                    _msg.timestamp == undefined\n                      ? { paddingBottom: \"10px\" }\n                      : null\n                  }\n                >\n                  {_msg.message}\n                  {_msg.timestamp == undefined ? null : (\n                    <div\n                      style={{\n                        display: \"flex\",\n                        fontSize: \"0.8em\",\n                        justifyContent: \"flex-end\",\n                        padding: \"8px\",\n                      }}\n                    >\n                      {this.formatDate(_msg.timestamp)}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </main>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withStyles(styles)(ChatViewComponent);\n","const styles = (theme) => ({\n  sendBtn: {\n    color: \"blue\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"gray\",\n    },\n  },\n\n  chatTextBoxContainer: {\n    position: \"absolute\",\n    bottom: \"15px\",\n    left: \"315px\",\n    boxSizing: \"border-box\",\n    overflow: \"auto\",\n    width: \"calc(100% - 300px - 50px)\",\n  },\n\n  chatTextBox: {\n    width: \"calc(100% - 25px)\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Send from \"@material-ui/icons/Send\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nclass ChatTextBoxComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chatText: \"\",\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.chatTextBoxContainer}>\n        <TextField\n          id=\"chattextbox\"\n          placeholder=\"Enter your message\"\n          onKeyUp={(e) => this.userTyping(e)}\n          className={classes.chatTextBox}\n          onFocus={this.userClickedInput}\n        ></TextField>\n        <Send onClick={this.submitMessage} className={classes.sendBtn}></Send>\n      </div>\n    );\n  }\n\n  userTyping = (e) =>\n    // console.log(e.keyCode);\n    e.keyCode == 13\n      ? this.submitMessage()\n      : this.setState({\n          chatText: e.target.value,\n        });\n  messageValid = (txt) => txt && txt.replace(/\\s/g, \"\").length;\n\n  userClickedInput = () => {\n    this.props.messageReadFn();\n  };\n\n  submitMessage = () => {\n    // console.log(\"HERE\");\n    if (this.messageValid(this.state.chatText)) {\n      this.props.submitMessageFn(this.state.chatText);\n    }\n    document.getElementById(\"chattextbox\").value = \"\";\n  };\n}\n\nexport default withStyles(styles)(ChatTextBoxComponent);\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing() * 3,\n    marginRight: theme.spacing() * 3,\n    [theme.breakpoints.up(400 + theme.spacing() * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    padding: `${theme.spacing() * 2}px ${theme.spacing() * 3}px ${\n      theme.spacing() * 3\n    }px`,\n    position: \"absolute\",\n    width: \"350px\",\n    top: \"50px\",\n    left: \"calc(50% + 150px - 175px)\",\n  },\n  input: {},\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(),\n  },\n  submit: {\n    marginTop: theme.spacing() * 3,\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Paper,\n  withStyles,\n  CssBaseline,\n  Typography,\n} from \"@material-ui/core\";\nimport styles from \"./styles\";\nconst firebase = require(\"firebase\");\n\nclass NewChatComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: null,\n      message: null,\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Send a message\n          </Typography>\n          <form\n            className={classes.form}\n            onSubmit={(e) => this.submitNewChat(e)}\n          >\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"new-chat-username\">\n                Enter your Friends email\n              </InputLabel>\n              <Input\n                required\n                className={classes.input}\n                autoFocus\n                onChange={(e) => this.userTyping(\"username\", e)}\n                id=\"new-chat-username\"\n              ></Input>\n            </FormControl>\n            <FormControl fullWidth htmlFor=\"new-chat-message\">\n              <InputLabel>Enter your message</InputLabel>\n              <Input\n                required\n                className={classes.input}\n                onChange={(e) => this.userTyping(\"message\", e)}\n                id=\"new-chat-message\"\n              ></Input>\n            </FormControl>\n            <Button\n              fullWidth\n              className={classes.submit}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Send\n            </Button>\n          </form>\n        </Paper>\n      </main>\n    );\n  }\n\n  componentWillMount() {\n    if (!firebase.auth().currentUser) this.props.history.push(\"/login\");\n  }\n\n  userTyping = (inputType, e) => {\n    switch (inputType) {\n      case \"username\":\n        this.setState({ username: e.target.value });\n        break;\n\n      case \"message\":\n        this.setState({ message: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  submitNewChat = async (e) => {\n    e.preventDefault();\n    const userExists = await this.userExists();\n    if (userExists) {\n      const chatExists = await this.chatExists();\n      chatExists ? this.goToChat() : this.createChat();\n    }\n  };\n\n  buildDocKey = () =>\n    [firebase.auth().currentUser.email, this.state.username].sort().join(\":\");\n\n  createChat = () => {\n    this.props.newChatSubmitFn({\n      sendTo: this.state.username,\n      message: this.state.message,\n    });\n  };\n\n  goToChat = () =>\n    this.props.goToChatFn(this.buildDocKey(), this.state.message);\n\n  chatExists = async () => {\n    const docKey = this.buildDocKey();\n    const chat = await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .get();\n    console.log(chat.exists);\n    return chat.exists;\n  };\n  userExists = async () => {\n    const usersSnapshot = await firebase.firestore().collection(\"users\").get();\n    const exists = usersSnapshot.docs\n      .map((_doc) => _doc.data().email)\n      .includes(this.state.username);\n    this.setState({ serverError: !exists });\n    return exists;\n  };\n}\n\nexport default withStyles(styles)(NewChatComponent);\n","const styles = (theme) => ({\n  signOutBtn: {\n    position: \"absolute\",\n    bottom: \"0px\",\n    left: \"0px\",\n    width: \"300px\",\n    borderRadius: \"0px\",\n    backgroundColor: \"#227092\",\n    height: \"35px\",\n    boxShadow: \"0px 0px 2px black\",\n    color: \"white\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport ChatListComponent from \"../ChatList/chatlist\";\nimport { Button, withStyles } from \"@material-ui/core\";\nimport ChatViewComponent from \"../Chatview/Chatview\";\nimport ChatTextBoxComponent from \"../Chattextbox/Chattextbox\";\nimport NewChatComponent from \"../NewChat/NewChat\";\nimport styles from \"./styles\";\n\nconst firebase = require(\"firebase\");\n\nclass DashboardComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: [],\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <ChatListComponent\n          history={this.props.history}\n          newChatButtonFn={this.newChatButtonClicked}\n          selectChatFn={this.selectChat}\n          chats={this.state.chats}\n          userEmail={this.state.email}\n          selectedChatIndex={this.state.selectedChat}\n        />\n        {!this.state.newChatFormVisible ? (\n          <ChatViewComponent\n            user={this.state.email}\n            chat={this.state.chats[this.state.selectedChat]}\n          />\n        ) : null}\n        {this.state.selectedChat !== null && !this.state.newChatFormVisible ? (\n          <ChatTextBoxComponent\n            messageReadFn={this.messageRead}\n            submitMessageFn={this.submitMessage}\n          />\n        ) : null}\n        {this.state.newChatFormVisible ? (\n          <NewChatComponent\n            goToChatFn={this.goToChat}\n            newChatSubmitFn={this.newChatSubmit}\n          />\n        ) : null}\n        <Button onClick={this.signOut} className={classes.signOutBtn}>\n          Sign Out\n        </Button>\n      </div>\n    );\n  }\n\n  goToChat = async (docKey, msg) => {\n    const usersInChat = docKey.split(\":\");\n    const chat = this.state.chats.find((_chat) =>\n      usersInChat.every((_user) => _chat.users.includes(_user))\n    );\n    console.log(\"LEMAN\", chat);\n    this.setState({ newChatFormVisible: false });\n    await this.selectChat(this.state.chats.indexOf(chat));\n    this.submitMessage(msg);\n  };\n\n  newChatSubmit = async (chat) => {\n    const docKey = this.buildDocKey(chat.sendTo);\n    await firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .set({\n        receiverHasRead: false,\n        users: [this.state.email, chat.sendTo],\n        messages: [\n          {\n            message: chat.message,\n            sender: this.state.email,\n          },\n        ],\n      });\n    this.setState({ newChatFormVisible: false });\n    this.selectChat(this.state.chats.length - 1);\n  };\n\n  submitMessage = (msg) => {\n    const docKey = this.buildDocKey(\n      this.state.chats[this.state.selectedChat].users.filter(\n        (_usr) => _usr !== this.state.email\n      )[0]\n    );\n    firebase\n      .firestore()\n      .collection(\"chats\")\n      .doc(docKey)\n      .update({\n        messages: firebase.firestore.FieldValue.arrayUnion({\n          message: msg,\n          sender: this.state.email,\n          timestamp: new Date().toISOString(),\n        }),\n        receiverHasRead: false,\n      });\n  };\n\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(\":\");\n\n  selectChat = async (chatIndex) => {\n    await this.setState({\n      selectedChat: chatIndex,\n      newChatFormVisible: false,\n    });\n    await this.messageRead();\n  };\n\n  newChatButtonClicked = () => {\n    console.log(\"HERE\");\n    this.setState({\n      newChatFormVisible: true,\n    });\n  };\n\n  messageRead = () => {\n    const docKey = this.buildDocKey(\n      this.state.chats[this.state.selectedChat].users.filter(\n        (_usr) => _usr != this.state.email\n      )[0]\n    );\n    if (this.clickedChatWhereNotSender(this.state.selectedChat)) {\n      firebase.firestore().collection(\"chats\").doc(docKey).update({\n        receiverHasRead: true,\n      });\n    }\n  };\n\n  clickedChatWhereNotSender = (chatIndex) => {\n    return (\n      this.state.chats[chatIndex].messages[\n        this.state.chats[chatIndex].messages.length - 1\n      ].sender !== this.state.email\n    );\n  };\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(async (_usr) => {\n      if (!_usr) {\n        this.props.history.push(\"/login\");\n      } else {\n        console.log(_usr.email);\n        await firebase\n          .firestore()\n          .collection(\"chats\")\n          .where(\"users\", \"array-contains\", _usr.email)\n          .onSnapshot(async (res) => {\n            const chats = res.docs.map((_doc) => _doc.data());\n            await this.setState({ email: _usr.email, chats: chats });\n          });\n      }\n      console.log(this.state.chats);\n    });\n  };\n\n  signOut = () => {\n    firebase.auth().signOut();\n  };\n}\n\nexport default withStyles(styles)(DashboardComponent);\n","import React from \"react\";\n\nfunction Home() {\n  return <h1>Home page</h1>;\n}\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  HashRouter,\n  Link,\n  Route,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport LoginComponent from \"./Login/login\";\nimport SignupComponent from \"./Signup/signup\";\nimport DashboardComponent from \"./Dashboard/dashboard\";\nimport Home from \"./Home/home\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\nrequire(\"dotenv\").config();\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_AUTH_TOKEN,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DB_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: \"chat-app-react-16a72.appspot.com\",\n  messagingSenderId: \"609682809334\",\n  appId: \"1:609682809334:web:183f3c1dad2ea16f7c27d7\",\n  measurementId: \"G-6DQGWQ0YV7\",\n});\n\nconst routing = (\n  <HashRouter basename=\"/\">\n    <div>\n      {/* <ul id=\"navBar\">\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/signup\">Signup</Link>\n        </li>\n        <li>\n          <Link to=\"/login\">Login</Link>\n        </li>\n        <li>\n          <Link to=\"/dashboard\">Dashboard</Link>\n        </li>\n\n        {firebase.auth().onAuthStateChanged(async (_usr) => {\n          console.log(_usr);\n          if (!_usr) {\n            console.log(\"HERE\");\n            return <div>HELFJSLFJ</div>;\n          } else {\n            return (\n              <li>\n                <a\n                  href=\"/\"\n                  onClick={() => {\n                    firebase.auth().signOut();\n                  }}\n                >\n                  Signout\n                </a>\n              </li>\n            );\n          }\n        })} \n      </ul>\n      <hr /> */}\n      <Route exact path=\"/\" component={LoginComponent} />\n      <Route path=\"/signup\" component={SignupComponent} />\n      <Route path=\"/login\" component={LoginComponent} />\n      <Route path=\"/dashboard\" component={DashboardComponent} />\n    </div>\n  </HashRouter>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}