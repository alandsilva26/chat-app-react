{"version":3,"sources":["Login/styles.js","Login/login.js","Signup/styles.js","Signup/signup.js","ChatList/styles.js","ChatList/chatlist.js","Dashboard/dashboard.js","Home/home.js","index.js"],"names":["styles","theme","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","firebase","require","LoginComponent","componentDidMount","userTyping","type","e","setState","email","target","value","password","submitLogin","preventDefault","auth","signInWithEmailAndPassword","state","then","props","history","push","err","console","log","loginError","message","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","autoFocus","id","onChange","Button","vairant","to","React","Component","withStyles","hasAccountHeader","logInLink","SignupComponent","passwordConfirmation","formIsValid","submitSignup","createUserWithEmailAndPassword","authRes","userObject","user","firestore","collection","doc","set","authError","signupError","root","backgroundColor","palette","background","height","position","left","boxShadow","listItem","cursor","newChatBtn","borderRadius","unreadMessage","top","right","ChatListComponent","newChat","selectChat","chats","length","newChatsBtn","onClick","List","map","_chat","_index","key","ListItem","selected","selectedChatIndex","ListItemAvatar","Avatar","alt","users","filter","_user","userEmail","split","ListItemText","primary","secondary","Fragment","messages","substring","Divider","DashboardComponent","chatIndex","newChatButtonClicked","newChatFormVisible","onAuthStateChanged","_usr","a","where","onSnapshot","res","docs","_doc","data","selectedChat","newChatButtonFn","selectChatFn","Home","config","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","basename","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5023950f.chunk.js","sourcesContent":["const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\", // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  noAccountHeader: {\n    width: \"100%\",\n  },\n  signUpLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport styles from \"./styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst firebase = require(\"firebase\");\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      loginError: \"\",\n    };\n  }\n\n  componentDidMount = () => {};\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => this.submitLogin(e)}>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"login-email-input\">\n                Enter your email\n              </InputLabel>\n              <Input\n                autoComplete=\"email\"\n                autoFocus\n                id=\"login-email-input\"\n                onChange={(e) => this.userTyping(\"email\", e)}\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"login-password-input\">\n                Enter your password\n              </InputLabel>\n              <Input\n                id=\"login-password-input\"\n                type=\"password\"\n                onChange={(e) => this.userTyping(\"password\", e)}\n              ></Input>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Login\n            </Button>\n          </form>\n          {this.state.loginError ? (\n            <Typography\n              component=\"h5\"\n              vairant=\"h6\"\n              className={classes.errorText}\n            >\n              {this.state.loginError}\n            </Typography>\n          ) : null}\n          <Typography\n            component=\"h5\"\n            variant=\"h6\"\n            className={classes.noAccountHeader}\n          >\n            Don't Have an Account?\n          </Typography>\n          <Link className={classes.signUpLink} to=\"/signup\">\n            Sign up\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({\n          email: e.target.value,\n        });\n        break;\n      case \"password\":\n        this.setState({\n          password: e.target.value,\n        });\n        break;\n    }\n  };\n\n  submitLogin = (e) => {\n    e.preventDefault();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(\n        () => {\n          this.props.history.push(\"/dashboard\");\n        },\n        (err) => {\n          console.log(err);\n          this.setState({\n            loginError: err.message,\n          });\n        }\n      );\n  };\n}\n\nexport default withStyles(styles)(LoginComponent);\n","const styles = (theme) => ({\n  main: {\n    width: \"auto\",\n    display: \"block\",\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${\n      theme.spacing.unit * 3\n    }px`,\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  hasAccountHeader: {\n    width: \"100%\",\n  },\n  logInLink: {\n    width: \"100%\",\n    textDecoration: \"none\",\n    color: \"#303f9f\",\n    fontWeight: \"bolder\",\n  },\n  errorText: {\n    color: \"red\",\n    textAlign: \"center\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./styles\";\n\nclass SignupComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: null,\n      password: null,\n      passwordConfirmation: null,\n      signupError: null,\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <main className={classes.main}>\n        <CssBaseline></CssBaseline>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up!\n          </Typography>\n          <Typography component=\"h5\" variant=\"s6\" className={classes.errorText}>\n            Please do not use passwords you have used elsewhere.\n          </Typography>\n          <form className={classes.form} onSubmit={(e) => this.submitSignup(e)}>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-email-input\">\n                Enter your email\n              </InputLabel>\n              <Input\n                autoComplete=\"email\"\n                autoFocus\n                type=\"email\"\n                id=\"signup-email-input\"\n                onChange={(e) => this.userTyping(\"email\", e)}\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-password-input\">\n                Create a Password\n              </InputLabel>\n              <Input\n                type=\"password\"\n                id=\"signup-password-input\"\n                onChange={(e) => this.userTyping(\"password\", e)}\n              ></Input>\n            </FormControl>\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"signup-password-confirmation-input\">\n                Confirm Your Password\n              </InputLabel>\n              <Input\n                type=\"password\"\n                id=\"signup-password-confirmation-input\"\n                onChange={(e) => this.userTyping(\"passwordConfirmation\", e)}\n              ></Input>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              className={classes.submit}\n            >\n              Submit\n            </Button>\n          </form>\n          {this.state.signupError ? (\n            <Typography\n              component=\"h5\"\n              variant=\"h6\"\n              className={classes.errorText}\n            >\n              {this.state.signupError}\n            </Typography>\n          ) : null}\n          <Typography\n            component=\"h5\"\n            variant=\"h6\"\n            className={classes.hasAccountHeader}\n          >\n            Already Have An Account?\n          </Typography>\n          <Link className={classes.logInLink} to=\"/login\">\n            Log In!\n          </Link>\n        </Paper>\n      </main>\n    );\n  }\n\n  userTyping = (type, e) => {\n    switch (type) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      case \"passwordConfirmation\":\n        this.setState({ passwordConfirmation: e.target.value });\n        break;\n    }\n  };\n\n  formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n  submitSignup = (e) => {\n    e.preventDefault();\n    if (!this.formIsValid()) {\n      this.setState({ signupError: \"Passwords do not match\" });\n      return;\n    }\n    const firebase = require(\"firebase\");\n    require(\"firebase/firestore\");\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then((authRes) => {\n        const userObject = {\n          email: authRes.user.email,\n        };\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(this.state.email)\n          .set(userObject)\n          .then(\n            () => {\n              this.props.history.push(\"/dashboard\");\n            },\n            (authError) => {\n              console.log(authError);\n              this.setState({ signupError: \"Failed to add user\" });\n            }\n          );\n      });\n  };\n}\n\nexport default withStyles(styles)(SignupComponent);\n","const styles = (theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    height: \"calc(100% - 35px)\",\n    position: \"absolute\",\n    left: \"0\",\n    width: \"300px\",\n    boxShadow: \"0px 0px 2px black\",\n  },\n  listItem: {\n    cursor: \"pointer\",\n  },\n  newChatBtn: {\n    borderRadius: \"0px\",\n  },\n  unreadMessage: {\n    color: \"red\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"5px\",\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport styles from \"./styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport NotificationImportant from \"@material-ui/icons/NotificationImportant\";\n\nclass ChatListComponent extends React.Component {\n  render() {\n    const { classes } = this.props;\n    if (this.props.chats.length > 0) {\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatsBtn}\n            onClick={this.newChat}\n          >\n            New Message\n          </Button>\n          <List>\n            {this.props.chats.map((_chat, _index) => {\n              return (\n                <div key={_index}>\n                  <ListItem\n                    onClick={() => this.selectChat(_index)}\n                    className={classes.listItem}\n                    selected={this.props.selectedChatIndex === _index}\n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\">\n                        {\n                          _chat.users\n                            .filter(\n                              (_user) => _user !== this.props.userEmail\n                            )[0]\n                            .split(\"\")[0]\n                        }\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={_chat.users.filter(\n                        (_user) => _user !== this.props.userEmail\n                      )}\n                      secondary={\n                        <React.Fragment>\n                          <Typography component=\"span\" color=\"textPrimary\">\n                            {_chat.messages[\n                              _chat.messages.length - 1\n                            ].message.substring(0, 30)}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    ></ListItemText>\n                  </ListItem>\n                  <Divider></Divider>\n                </div>\n              );\n            })}\n          </List>\n        </main>\n      );\n    } else {\n      return (\n        <main className={classes.root}>\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n            className={classes.newChatsBtn}\n            onClick={this.newChat}\n          >\n            New Message\n          </Button>\n        </main>\n      );\n    }\n  }\n\n  newChat = () => {};\n\n  selectChat = () => {};\n}\n\nexport default withStyles(styles)(ChatListComponent);\n","import React from \"react\";\nimport ChatListComponent from \"../ChatList/chatlist\";\n\nconst firebase = require(\"firebase\");\n\nclass DashboardComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedChat: null,\n      newChatFormVisible: false,\n      email: null,\n      chats: [],\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <ChatListComponent\n          history={this.props.history}\n          newChatButtonFn={this.newChatButtonClicked}\n          selectChatFn={this.selectChat}\n          chats={this.state.chats}\n          userEmail={this.state.email}\n          selectedChatIndex={this.state.selectedChat}\n        />\n      </div>\n    );\n  }\n\n  selectChat = (chatIndex) => {\n    console.log(\"Selected a chat\", chatIndex);\n  };\n\n  newChatButtonClicked = () => {\n    this.setState({\n      newChatFormVisible: true,\n    });\n  };\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(async (_usr) => {\n      if (!_usr) {\n        this.props.history.push(\"/login\");\n      } else {\n        console.log(_usr.email);\n        await firebase\n          .firestore()\n          .collection(\"chats\")\n          .where(\"users\", \"array-contains\", _usr.email)\n          .onSnapshot(async (res) => {\n            // console.log(res);\n            const chats = res.docs.map((_doc) => _doc.data());\n            await this.setState({ email: _usr.email, chats: chats });\n          });\n      }\n      console.log(this.state.chats);\n    });\n  };\n}\n\nexport default DashboardComponent;\n","import React from \"react\";\n\nfunction Home() {\n  return <h1>Home page</h1>;\n}\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {\n  HashRouter,\n  Link,\n  Route,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport LoginComponent from \"./Login/login\";\nimport SignupComponent from \"./Signup/signup\";\nimport DashboardComponent from \"./Dashboard/dashboard\";\nimport Home from \"./Home/home\";\n\nconst firebase = require(\"firebase\");\nrequire(\"firebase/firestore\");\nrequire(\"dotenv\").config();\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_AUTH_TOKEN,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DB_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: \"chat-app-react-16a72.appspot.com\",\n  messagingSenderId: \"609682809334\",\n  appId: \"1:609682809334:web:183f3c1dad2ea16f7c27d7\",\n  measurementId: \"G-6DQGWQ0YV7\",\n});\n\nconst routing = (\n  <HashRouter basename=\"/\">\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/signup\">Signup</Link>\n        </li>\n        <li>\n          <Link to=\"/login\">Login</Link>\n        </li>\n        <li>\n          <Link to=\"/dashboard\">Dashboard</Link>\n        </li>\n\n        {/* {firebase.auth().onAuthStateChanged(async (_usr) => {\n          console.log(_usr);\n          if (!_usr) {\n            console.log(\"HERE\");\n            return <div>HELFJSLFJ</div>;\n          } else {\n            return (\n              <li>\n                <a\n                  href=\"/\"\n                  onClick={() => {\n                    firebase.auth().signOut();\n                  }}\n                >\n                  Signout\n                </a>\n              </li>\n            );\n          }\n        })} */}\n      </ul>\n      <hr />\n      <Route exact path=\"/\" component={LoginComponent} />\n      <Route path=\"/signup\" component={SignupComponent} />\n      <Route path=\"/login\" component={LoginComponent} />\n      <Route path=\"/dashboard\" component={DashboardComponent} />\n    </div>\n  </HashRouter>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n"],"sourceRoot":""}